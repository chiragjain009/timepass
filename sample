import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st

def date_range_analysis(df):
    # Convert 'ACT_DATE' to datetime
    df['ACT_DATE'] = pd.to_datetime(df['ACT_DATE'], format='%d-%b-%y')

    st.title('Date Range-wise Analysis')

    # Get the minimum and maximum date from the dataset
    min_date = df['ACT_DATE'].min()
    max_date = df['ACT_DATE'].max()

    # Streamlit Calendar Inputs for Date Range
    col1, col2 = st.columns(2)
    with col1:
        start_date = st.date_input("Select Start Date", value=min_date, min_value=min_date, max_value=max_date)
    with col2:
        end_date = st.date_input("Select End Date", value=max_date, min_value=start_date, max_value=max_date)

    # Enforce 1-month maximum range
    date_diff = (pd.Timestamp(end_date) - pd.Timestamp(start_date)).days
    max_allowed_days = 31  # 1 month limit

    if date_diff > max_allowed_days:
        st.warning(f"Date range is too large. Please select a range of 1 month or less (up to {max_allowed_days} days).")
    elif start_date and end_date:
        # Filter data within the selected date range
        filtered_df = df[(df['ACT_DATE'] >= pd.Timestamp(start_date)) & (df['ACT_DATE'] <= pd.Timestamp(end_date))]

        if not filtered_df.empty:
            # Group by date
            grouped_df = filtered_df.groupby('ACT_DATE').size().reset_index(name='count')
            grouped_df['label'] = grouped_df['ACT_DATE'].dt.strftime('%d-%b')

            # Plotting
            fig, ax = plt.subplots(figsize=(12, 6))
            sns.barplot(
                x=grouped_df['label'],
                y=grouped_df['count'],
                palette="coolwarm",
                edgecolor="black",
                ax=ax
            )
            ax.set_xlabel('Date', fontsize=12)
            ax.set_ylabel('Total Number of Records', fontsize=12)
            ax.set_title(f'Records Count from {start_date.strftime("%d-%b-%Y")} to {end_date.strftime("%d-%b-%Y")}', 
                         fontsize=14, fontweight='bold')
            ax.tick_params(axis='both', which='major', labelsize=10)
            plt.xticks(rotation=45)

            st.pyplot(fig)
        else:
            st.warning("No data available for the selected date range.")
    else:
        st.warning("Please select both start and end dates.")
